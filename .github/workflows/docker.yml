name: Build and Publish Docker Image

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

# Add permissions for security scanning
permissions:
  contents: read
  security-events: write
  actions: read
  id-token: write  # For OIDC
  packages: write  # For container registry

env:
  REGISTRY: docker.io
  IMAGE_NAME: gitchangesanalyzer

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal
  docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
        labels: |
          org.opencontainers.image.title=GitChangesAnalyzer
          org.opencontainers.image.description=A powerful tool to analyze git commit changes and intelligently group similar changes
          org.opencontainers.image.vendor=GitChangesAnalyzer
          org.opencontainers.image.licenses=MIT
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      id: build
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        target: final
        cache-from: type=gha
        cache-to: type=gha,mode=max
        outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=GitChangesAnalyzer production image

    - name: Build and push development image
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:dev
          ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest-dev
        labels: ${{ steps.meta.outputs.labels }}
        target: build
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Show build completion
      run: |
        echo "âœ… Docker image build completed successfully!"
        if [ "${{ github.event_name }}" != "pull_request" ]; then
          echo "ðŸš€ Images pushed to Docker Hub:"
          echo "   - ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest"
          if [ "${{ github.ref }}" == "refs/heads/main" ] || [ "${{ github.ref }}" == "refs/heads/master" ]; then
            echo "   - ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:dev"
          fi
          # Show image digest if available
          if [ -n "${{ steps.build.outputs.digest }}" ]; then
            echo "ðŸ“¦ Image digest: ${{ steps.build.outputs.digest }}"
          fi
        else
          echo "ðŸ”¨ Image built for testing (not pushed on PR)"
        fi
        echo ""
        echo "ðŸ”’ Security scanning will run in a separate workflow"
    
    - name: Upload build artifacts
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-${{ github.run_number }}
        path: |
          /tmp/.buildx-build*
        retention-days: 7
